{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","isReverse","setIsReverse","showResetButton","goods","preperedGoods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","getPreperedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAwBKA,E,0EAlBQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAoBH,EAAUI,SAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCH,oBAAkB,GAApD,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAAkBF,GAAaF,EAE/BK,EA/BR,SACEA,EADF,GAGa,IADTL,EACQ,EADRA,UAAWE,EACH,EADGA,UAEPI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAAUe,SACb,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAAUiB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAQOS,CAAiBnB,EAAiB,CAAEI,YAAWE,cAE7D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,WAAYlB,IAAcL,EAAUe,SACpC,UAAWV,IAAcL,EAAUe,WAErCS,QAAS,WACPlB,EAAaN,EAAUe,WAP3B,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,WAAYlB,IAAcL,EAAUiB,OACpC,aAAcZ,IAAcL,EAAUiB,SAExCO,QAAS,kBAAMlB,EAAaN,EAAUiB,SANxC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,YAAahB,EACb,aAAcA,IAEhBiB,QAAS,kBAAMhB,GAAcD,IAN/B,qBAWEE,GACE,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAaN,EAAUI,SACvBI,GAAa,IALjB,sBAcN,6BACGE,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed88c588.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface SortParams {\n  sortField: string,\n  isReverse: boolean,\n}\n\nenum SortField {\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n  DEFAULT = '',\n}\n\nfunction getPreperedGoods(\n  goods: string[],\n  { sortField, isReverse }: SortParams,\n): string[] {\n  const preperedGoods = [...goods];\n\n  if (sortField) {\n    preperedGoods.sort((goodA, goodB) => {\n      switch (sortField) {\n        case SortField.ALPHABET:\n          return goodA.localeCompare(goodB);\n        case SortField.LENGTH:\n          return goodA.length - goodB.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortField>(SortField.DEFAULT);\n  const [isReverse, setIsReverse] = useState<boolean>(false);\n  const showResetButton = isReverse || sortField;\n\n  const goods = getPreperedGoods(goodsFromServer, { sortField, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', {\n            'is-light': sortField !== SortField.ALPHABET,\n            'is-info': sortField === SortField.ALPHABET,\n          })}\n          onClick={() => {\n            setSortField(SortField.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', {\n            'is-light': sortField !== SortField.LENGTH,\n            'is-success': sortField === SortField.LENGTH,\n          })}\n          onClick={() => setSortField(SortField.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', {\n            'is-light': !isReverse,\n            'is-warning': isReverse,\n          })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n        {\n          showResetButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField(SortField.DEFAULT);\n                setIsReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}